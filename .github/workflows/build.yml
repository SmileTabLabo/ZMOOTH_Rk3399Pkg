name: Build rk3399-edk2

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started

env:
  REPO_URL: https://github.com/chainsx/rk3399-edk2
  REPO_BRANCH: master
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential acpica-tools nasm uuid-dev gcc-aarch64-linux-gnu
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        export WORKSPACE=~/workspace
        mkdir $WORKSPACE
        cd $WORKSPACE

    - name: Clone source code
      working-directory: /workdir
      run: |
        git clone https://github.com/tianocore/edk2.git
        pushd edk2
        git checkout 46f4c9677c615d862649459392f8f55b3e6567c2
        popd
        git clone https://github.com/tianocore/edk2-non-osi.git
        pushd edk2-non-osi
        git checkout 1e2ca640be54d7a4d5d804c4f33894d099432de3
        popd
        git clone https://github.com/tianocore/edk2-platforms.git
        pushd edk2-platforms
        git checkout 861c200cda1417539d46fe3b1eba2b582fa72cbb
        popd
        git clone https://github.com/andreiw/rk3399-edk2.git edk2-platforms/Platform/Rockchip

    - name: SSH connection to Actions
      uses: csexton/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: Compile the firmware
      id: compile
      run: |
        export GCC5_AARCH64_PREFIX=aarch64-linux-gnu-
        export PACKAGES_PATH=$WORKSPACE/edk2:$WORKSPACE/edk2-platforms:$WORKSPACE/edk2-non-osi
        . edk2/edksetup.sh
        make -C edk2/BaseTools
        build -a AARCH64 -t GCC5 -p edk2-platforms/Platform/Rockchip/Rk3399Pkg/Rk3399-SDK.dsc -b DEBUG
        edk2-platforms/Platform/Rockchip/Rk3399Pkg/Tools/loaderimage --pack --uboot Build/Rk3399-SDK/DEBUG_GCC5/FV/RK3399_SDK_UEFI.fd RK3399_SDK_UEFI.img
        mkdir uefi_output
        cp RK3399_SDK_UEFI.img uefi_output

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: env.UPLOAD_BIN_DIR == 'true'
      with:
        name: efi_target
        path: uefi_output

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd uefi_output
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: uefi_firmware
        path: ${{ env.FIRMWARE }}
